/** \file
 *  This C header file was generated by $ANTLR version 3.4
 *
 *     -  From the grammar source file : MySQLSimpleParser.g
 *     -                            On : 2015-12-10 14:46:59
 *     -                for the parser : MySQLSimpleParserParser
 *
 * Editing it, at least manually, is not wise.
 *
 * C language generator and runtime by Jim Idle, jimi|hereisanat|idle|dotgoeshere|ws.
 *
 *
 * The parser 
MySQLSimpleParser

has the callable functions (rules) shown below,
 * which will invoke the code for the associated rule in the source grammar
 * assuming that the input stream is pointing to a token/text stream that could begin
 * this rule.
 *
 * For instance if you call the first (topmost) rule in a parser grammar, you will
 * get the results of a full parse, but calling a rule half way through the grammar will
 * allow you to pass part of a full token stream to the parser, such as for syntax checking
 * in editors and so on.
 *
 * The parser entry points are called indirectly (by function pointer to function) via
 * a parser context typedef pMySQLSimpleParser, which is returned from a call to MySQLSimpleParserNew().
 *
 * The methods in pMySQLSimpleParser are  as follows:
 *
 *  - 
 void
      pMySQLSimpleParser->query(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_database(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_event(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_log_file_group(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_server(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_table(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_table_commands(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_table_list_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_table_list_entry(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->key_def(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_order_by(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_algorithm_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_lock_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_lock_algorithm(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_partition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->validation(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->remove_partitioning(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->all_or_partition_name_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_tablespace(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_tablespace_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->change_tablespace_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_view(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_database(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_database_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_with_definer(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_event(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_event_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_routine(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_procedure(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_function(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_routine_or_udf(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->procedure_body(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->function_body(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->udf_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->routine_create_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->routine_create_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->routine_alter_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->routine_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_index(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_index_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_index_target(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_logfile_group(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_logfile_group_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logfile_group_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logfile_group_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_server(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_server_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->server_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->server_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_table(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_table_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_field_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_field_list_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_creation_source(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_select(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_tablespace(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_tablespace_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->tablespace_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->tablespace_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_trigger(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_trigger_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->trigger_follows_precedes_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_view(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_view_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->view_replace_or_algorithm(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->view_algorithm(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->drop_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->drop_logfile_group_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->rename_table_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->truncate_table_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->call_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->delete_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->partition_delete(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->delete_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->do_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->handler_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->handler_read_or_scan(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->insert_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->insert_lock_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->insert_field_spec(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->fields(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->insert_identifier(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->insert_values(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->insert_query_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->insert_value_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->values(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->duplicate_key_update(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->load_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->data_or_xml(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->xml_rows_identified_by(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->load_data_file_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->load_data_file_target_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_or_variable_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->replace_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_paren(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_from(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_part2(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->subquery(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->query_expression_body(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_part2_derived(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->query_spec_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_item_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_alias(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->limit_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->simple_limit_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->limit_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->limit_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->into_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->procedure_analyse_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->having_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->group_by_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->olap_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->order_by_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->order_by_or_limit(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->direction(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->from_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->where_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_reference_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->join_table_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->escaped_table_reference(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_reference(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->join(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_factor(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_table_factor_union(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->query_specification(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->join_table(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->join_condition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->union_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->union_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->union_or_order_by_or_limit(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->select_lock_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_alias(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_hint_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_hint(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_hint_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->key_or_index(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_hint_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_list_element(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->update_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->transaction_or_locking_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->transaction_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->transaction_characteristic(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->set_transaction_characteristic(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->isolation_level(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->savepoint_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->lock_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->lock_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->lock_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->xa_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->xa_convert(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->xid(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->replication_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->replication_load(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->change_master(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->change_master_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->master_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->master_file_def(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->server_id_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->change_replication(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->filter_definition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->filter_db_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->filter_table_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->filter_string_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->filter_wild_db_table_string(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->filter_db_pair_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->slave(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->slave_until_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->slave_connection_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->slave_thread_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->slave_thread_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->group_replication(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->prepared_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->execute_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->execute_var_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->account_management_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_user(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_user_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_user(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_user_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->require_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->connect_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->account_lock_password_expire_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->drop_user(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->parse_grant(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->grant(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->grant_proxy(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->rename_user(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->revoke_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->privilege_target(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->set_password(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->grant_object_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->grant_privileges(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->privilege_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->privilege_level(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->require_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->require_list_element(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->grant_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_administration_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->check_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->repair_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->install_uninstall_statment(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->set_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->option_value_no_option_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->option_value_following_option_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->set_expression_or_default(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->option_value_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->option_value(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->show_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->non_blocking(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->from_or_in(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->in_db(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->profile_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->other_administrative_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->key_cache_list_or_parts(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->key_cache_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->assign_to_keycache(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->assign_to_keycache_partition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->cache_keys_spec(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->key_usage_element(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->flush_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->log_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->flush_tables(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->flush_tables_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->load_table_index_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->load_table_index_partion(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->reset_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->utility_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->describe_command(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->explainable_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->use_command(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logical_or_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logical_xor_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logical_and_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logical_not_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->boolean_primary_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->predicate(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->predicate_in(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->bitwise_or_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->bitwise_and_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->shift_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->additive_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->multiplicative_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->bitwise_xor_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->concat_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->unary_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->not_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->interval_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->interval_function(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->interval_time_span(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->primary(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->expression_with_nested_parentheses(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->comparison_operator(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->multiplication_operator(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->runtime_function_call(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->runtime_function_call_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->time_function_parameters(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->fractional_precision(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->weight_string_levels(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->weight_string_level_list_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->date_time_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->trim_function(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->substring_function(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->geometry_function(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->aggregate_function(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->in_aggregate_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->count_function(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->udf_call(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->udf_call_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->stored_function_call(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->stored_function_call_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->aliased_expression_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->aliased_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->variable(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->user_variable(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->system_variable(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->variable_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->match_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->case_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->when_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->then_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->else_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->cast_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->cast_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->encoding(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->charset(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->not_rule(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->not2_rule(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->or_rule(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->xor_rule(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->and_rule(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->interval(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->interval_unit(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->interval_timestamp_unit(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->expression_list_with_parentheses(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->optional_expression_list_with_parentheses(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->expression_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->expression_list_with_direction(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->channel(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->compound_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->compound_statement_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->label(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->label_identifier(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->begin_end_block(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->loop_block(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->repeat_until_block(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->while_do_block(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->declarations(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->variable_declaration(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->condition_declaration(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->sp_condition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->sqlstate(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->cursor_declaration(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->handler_declaration(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->handler_condition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->case_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->then_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->else_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->if_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->if_body(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->iterate_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->leave_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->return_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->get_diagnostics(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->signal_allowed_expression(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->statement_information_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->condition_information_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->signal_information_item_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->signal_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->resignal_statement(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->signal_information_item(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->cursor_close(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->cursor_fetch(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->cursor_open(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->schedule(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->database_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_definition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_spec(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_def(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_def_tail(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->attribute(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->gcol_attribute(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->reference_definition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_columns(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_column(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->normal_index_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->fulltext_index_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->spatial_index_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->all_key_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->reference_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->data_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->data_type_definition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->data_type_elements(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_length(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->string_binary(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->ascii(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->unicode(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->type_datetime_precision(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->charset_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->charset_name_or_default(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->collation_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->collation_name_or_default(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->spatial_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->alter_table_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_table_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->create_table_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->partitioning(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->partition_key_algorithm(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->partition_definitions(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->partition_definition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->partition_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->subpartition_definition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->partition_value_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->definer_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->if_exists(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->if_not_exists(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->procedure_parameter(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->function_parameter(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->schema_identifier_pair(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->view_identifier_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_name_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_assignment_list_with_default(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_assignment_with_default(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->charset_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->fields_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->field_term(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->lines_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->line_term(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->user_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->grant_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->grant_user(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->user(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->like_clause(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->like_or_where(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->online_option(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->no_write_to_bin_log(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->use_partition(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_ref_variants(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_internal_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_ref_with_wildcard(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->column_ref_with_wildcard2(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->index_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_wild(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->schema_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->schema_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->procedure_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->procedure_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->function_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->function_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->trigger_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->trigger_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->view_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->view_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->tablespace_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->tablespace_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logfile_group_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->logfile_group_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->event_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->event_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->udf_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->server_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->server_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->engine_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_name(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->filter_table_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_ref_with_wildcard(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_ref(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_ref_no_db(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_name_variants(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_ref_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->table_ref_list_with_wildcard(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->pure_identifier(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->identifier(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->identifier_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->identifier_list_with_parentheses(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->qualified_identifier(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->ulong_number(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->real_ulong_number(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->ulonglong_number(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->real_ulonglong_number(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->string_list(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->text_string(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->text_string_no_linebreak(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->signed_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->string_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->string(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->num_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->bool_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->null_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->temporal_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->integer_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->real_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->float_options(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->precision(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->nchar_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->varchar_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->nvarchar_literal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->text_or_identifier(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->size_number(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->parentheses(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->equal(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->option_type(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->keyword(pMySQLSimpleParser)
 *  - 
 void
      pMySQLSimpleParser->keyword_sp(pMySQLSimpleParser)
 * 
 * 
 *
 * The return type for any particular rule is of course determined by the source
 * grammar file.
 */
// [The "BSD license"]
// Copyright (c) 2005-2009 Jim Idle, Temporal Wave LLC
// http://www.temporal-wave.com
// http://www.linkedin.com/in/jimidle
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#ifndef	_MySQLSimpleParser_H
#define _MySQLSimpleParser_H
/* =============================================================================
 * Standard antlr3 C runtime definitions
 */
#include    <antlr3.h>

/* End of standard antlr 3 runtime definitions
 * =============================================================================
 */

#ifdef __cplusplus
extern "C" {
#endif

// Forward declare the context typedef so that we can use it before it is
// properly defined. Delegators and delegates (from import statements) are
// interdependent and their context structures contain pointers to each other
// C only allows such things to be declared if you pre-declare the typedef.
//
typedef struct MySQLSimpleParser_Ctx_struct MySQLSimpleParser, * pMySQLSimpleParser;




#define ANTLR3_HUGE
#ifndef _WIN32
#pragma GCC diagnostic ignored "-Wunused-variable"
#pragma GCC diagnostic ignored "-Wparentheses"
#ifdef __APPLE__
// Comparison of unsigned expression >= 0 is always true.
#pragma GCC diagnostic ignored "-Wtautological-compare"
#else
#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ > 6 )
#pragma GCC diagnostic ignored "-Wtype-limits"
#endif
#endif
#endif

#include "MySQLLexer.h" // Not automatically included by the generator.


#ifdef	ANTLR3_WINDOWS
// Disable: Unreferenced parameter,							- Rules with parameters that are not used
//          constant conditional,							- ANTLR realizes that a prediction is always true (synpred usually)
//          initialized but unused variable					- tree rewrite variables declared but not needed
//          Unreferenced local variable						- lexer rule declares but does not always use _type
//          potentially unitialized variable used			- retval always returned from a rule
//			unreferenced local function has been removed	- susually getTokenNames or freeScope, they can go without warnigns
//
// These are only really displayed at warning level /W4 but that is the code ideal I am aiming at
// and the codegen must generate some of these warnings by necessity, apart from 4100, which is
// usually generated when a parser rule is given a parameter that it does not use. Mostly though
// this is a matter of orthogonality hence I disable that one.
//
#pragma warning( disable : 4100 )
#pragma warning( disable : 4101 )
#pragma warning( disable : 4127 )
#pragma warning( disable : 4189 )
#pragma warning( disable : 4505 )
#pragma warning( disable : 4701 )
#endif

/* ========================
 * BACKTRACKING IS ENABLED
 * ========================
 */


/** Context tracking structure for 
MySQLSimpleParser

 */
struct MySQLSimpleParser_Ctx_struct
{
    /** Built in ANTLR3 context tracker contains all the generic elements
     *  required for context tracking.
     */
    pANTLR3_PARSER   pParser;

     void
     (*query)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_database)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_event)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_log_file_group)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_server)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_table)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_table_commands)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_table_list_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_table_list_entry)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*key_def)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_order_by)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_algorithm_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_lock_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_lock_algorithm)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_partition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*validation)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*remove_partitioning)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*all_or_partition_name_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_tablespace)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_tablespace_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*change_tablespace_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_view)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_database)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_database_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_with_definer)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_event)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_event_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_routine)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_procedure)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_function)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_routine_or_udf)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*procedure_body)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*function_body)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*udf_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*routine_create_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*routine_create_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*routine_alter_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*routine_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_index)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_index_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_index_target)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_logfile_group)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_logfile_group_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logfile_group_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logfile_group_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_server)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_server_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*server_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*server_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_table)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_table_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_field_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_field_list_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_creation_source)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_select)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_tablespace)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_tablespace_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*tablespace_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*tablespace_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_trigger)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_trigger_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*trigger_follows_precedes_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_view)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_view_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*view_replace_or_algorithm)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*view_algorithm)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*drop_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*drop_logfile_group_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*rename_table_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*truncate_table_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*call_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*delete_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*partition_delete)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*delete_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*do_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*handler_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*handler_read_or_scan)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*insert_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*insert_lock_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*insert_field_spec)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*fields)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*insert_identifier)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*insert_values)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*insert_query_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*insert_value_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*values)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*duplicate_key_update)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*load_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*data_or_xml)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*xml_rows_identified_by)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*load_data_file_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*load_data_file_target_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_or_variable_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*replace_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_paren)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_from)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_part2)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*subquery)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*query_expression_body)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_part2_derived)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*query_spec_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_item_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_alias)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*limit_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*simple_limit_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*limit_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*limit_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*into_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*procedure_analyse_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*having_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*group_by_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*olap_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*order_by_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*order_by_or_limit)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*direction)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*from_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*where_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_reference_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*join_table_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*escaped_table_reference)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_reference)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*join)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_factor)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_table_factor_union)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*query_specification)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*join_table)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*join_condition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*union_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*union_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*union_or_order_by_or_limit)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*select_lock_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_alias)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_hint_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_hint)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_hint_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*key_or_index)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_hint_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_list_element)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*update_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*transaction_or_locking_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*transaction_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*transaction_characteristic)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*set_transaction_characteristic)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*isolation_level)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*savepoint_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*lock_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*lock_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*lock_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*xa_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*xa_convert)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*xid)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*replication_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*replication_load)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*change_master)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*change_master_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*master_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*master_file_def)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*server_id_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*change_replication)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*filter_definition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*filter_db_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*filter_table_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*filter_string_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*filter_wild_db_table_string)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*filter_db_pair_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*slave)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*slave_until_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*slave_connection_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*slave_thread_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*slave_thread_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*group_replication)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*prepared_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*execute_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*execute_var_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*account_management_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_user)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_user_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_user)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_user_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*require_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*connect_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*account_lock_password_expire_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*drop_user)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*parse_grant)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*grant)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*grant_proxy)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*rename_user)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*revoke_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*privilege_target)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*set_password)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*grant_object_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*grant_privileges)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*privilege_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*privilege_level)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*require_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*require_list_element)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*grant_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_administration_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*check_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*repair_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*install_uninstall_statment)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*set_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*option_value_no_option_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*option_value_following_option_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*set_expression_or_default)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*option_value_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*option_value)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*show_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*non_blocking)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*from_or_in)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*in_db)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*profile_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*other_administrative_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*key_cache_list_or_parts)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*key_cache_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*assign_to_keycache)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*assign_to_keycache_partition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*cache_keys_spec)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*key_usage_element)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*flush_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*log_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*flush_tables)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*flush_tables_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*load_table_index_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*load_table_index_partion)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*reset_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*utility_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*describe_command)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*explainable_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*use_command)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logical_or_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logical_xor_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logical_and_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logical_not_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*boolean_primary_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*predicate)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*predicate_in)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*bitwise_or_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*bitwise_and_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*shift_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*additive_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*multiplicative_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*bitwise_xor_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*concat_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*unary_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*not_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*interval_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*interval_function)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*interval_time_span)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*primary)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*expression_with_nested_parentheses)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*comparison_operator)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*multiplication_operator)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*runtime_function_call)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*runtime_function_call_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*time_function_parameters)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*fractional_precision)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*weight_string_levels)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*weight_string_level_list_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*date_time_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*trim_function)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*substring_function)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*geometry_function)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*aggregate_function)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*in_aggregate_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*count_function)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*udf_call)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*udf_call_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*stored_function_call)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*stored_function_call_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*aliased_expression_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*aliased_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*variable)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*user_variable)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*system_variable)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*variable_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*match_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*case_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*when_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*then_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*else_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*cast_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*cast_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*encoding)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*charset)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*not_rule)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*not2_rule)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*or_rule)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*xor_rule)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*and_rule)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*interval)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*interval_unit)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*interval_timestamp_unit)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*expression_list_with_parentheses)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*optional_expression_list_with_parentheses)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*expression_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*expression_list_with_direction)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*channel)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*compound_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*compound_statement_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*label)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*label_identifier)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*begin_end_block)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*loop_block)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*repeat_until_block)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*while_do_block)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*declarations)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*variable_declaration)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*condition_declaration)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*sp_condition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*sqlstate)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*cursor_declaration)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*handler_declaration)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*handler_condition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*case_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*then_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*else_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*if_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*if_body)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*iterate_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*leave_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*return_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*get_diagnostics)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*signal_allowed_expression)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*statement_information_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*condition_information_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*signal_information_item_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*signal_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*resignal_statement)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*signal_information_item)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*cursor_close)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*cursor_fetch)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*cursor_open)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*schedule)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*database_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_definition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_spec)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_def)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_def_tail)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*attribute)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*gcol_attribute)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*reference_definition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_columns)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_column)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*normal_index_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*fulltext_index_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*spatial_index_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*all_key_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*reference_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*data_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*data_type_definition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*data_type_elements)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_length)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*string_binary)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*ascii)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*unicode)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*type_datetime_precision)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*charset_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*charset_name_or_default)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*collation_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*collation_name_or_default)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*spatial_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*alter_table_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_table_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*create_table_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*partitioning)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*partition_key_algorithm)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*partition_definitions)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*partition_definition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*partition_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*subpartition_definition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*partition_value_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*definer_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*if_exists)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*if_not_exists)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*procedure_parameter)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*function_parameter)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*schema_identifier_pair)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*view_identifier_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_name_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_assignment_list_with_default)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_assignment_with_default)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*charset_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*fields_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*field_term)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*lines_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*line_term)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*user_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*grant_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*grant_user)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*user)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*like_clause)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*like_or_where)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*online_option)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*no_write_to_bin_log)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*use_partition)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_ref_variants)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_internal_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_ref_with_wildcard)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*column_ref_with_wildcard2)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*index_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_wild)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*schema_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*schema_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*procedure_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*procedure_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*function_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*function_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*trigger_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*trigger_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*view_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*view_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*tablespace_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*tablespace_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logfile_group_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*logfile_group_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*event_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*event_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*udf_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*server_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*server_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*engine_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_name)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*filter_table_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_ref_with_wildcard)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_ref)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_ref_no_db)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_name_variants)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_ref_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*table_ref_list_with_wildcard)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*pure_identifier)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*identifier)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*identifier_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*identifier_list_with_parentheses)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*qualified_identifier)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*ulong_number)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*real_ulong_number)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*ulonglong_number)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*real_ulonglong_number)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*string_list)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*text_string)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*text_string_no_linebreak)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*signed_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*string_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*string)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*num_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*bool_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*null_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*temporal_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*integer_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*real_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*float_options)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*precision)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*nchar_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*varchar_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*nvarchar_literal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*text_or_identifier)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*size_number)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*parentheses)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*equal)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*option_type)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*keyword)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     void
     (*keyword_sp)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred1_MySQLSimpleParser)	(struct MySQLSimpleParser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred2_MySQLSimpleParser)	(struct MySQLSimpleParser_Ctx_struct * ctx);
    // Delegated rules

    const char * (*getGrammarFileName)();
    void            (*reset)  (struct MySQLSimpleParser_Ctx_struct * ctx);
    void	    (*free)   (struct MySQLSimpleParser_Ctx_struct * ctx);
};

// Function protoypes for the constructor functions that external translation units
// such as delegators and delegates may wish to call.
//
ANTLR3_API pMySQLSimpleParser MySQLSimpleParserNew         (
pANTLR3_COMMON_TOKEN_STREAM
 instream);
ANTLR3_API pMySQLSimpleParser MySQLSimpleParserNewSSD      (
pANTLR3_COMMON_TOKEN_STREAM
 instream, pANTLR3_RECOGNIZER_SHARED_STATE state);

/** Symbolic definitions of all the tokens that the 
parser
 will work with.
 * \{
 *
 * Antlr will define EOF, but we can't use that as it it is too common in
 * in C header files and that would be confusing. There is no way to filter this out at the moment
 * so we just undef it here for now. That isn't the value we get back from C recognizers
 * anyway. We are looking for ANTLR3_TOKEN_EOF.
 */
#ifdef	EOF
#undef	EOF
#endif
#ifdef	Tokens
#undef	Tokens
#endif
#define EOF      -1
#define ACCOUNT_SYMBOL      4
#define ASCII_SYMBOL      5
#define ALWAYS_SYMBOL      6
#define BACKUP_SYMBOL      7
#define BEGIN_SYMBOL      8
#define BYTE_SYMBOL      9
#define CACHE_SYMBOL      10
#define CHARSET_SYMBOL      11
#define CHECKSUM_SYMBOL      12
#define CLOSE_SYMBOL      13
#define COMMENT_SYMBOL      14
#define COMMIT_SYMBOL      15
#define CONTAINS_SYMBOL      16
#define DEALLOCATE_SYMBOL      17
#define DO_SYMBOL      18
#define END_SYMBOL      19
#define EXECUTE_SYMBOL      20
#define FLUSH_SYMBOL      21
#define FOLLOWS_SYMBOL      22
#define FORMAT_SYMBOL      23
#define GROUP_REPLICATION_SYMBOL      24
#define HANDLER_SYMBOL      25
#define HELP_SYMBOL      26
#define HOST_SYMBOL      27
#define INSTALL_SYMBOL      28
#define LANGUAGE_SYMBOL      29
#define NO_SYMBOL      30
#define OPEN_SYMBOL      31
#define OPTIONS_SYMBOL      32
#define OWNER_SYMBOL      33
#define PARSER_SYMBOL      34
#define PARTITION_SYMBOL      35
#define PORT_SYMBOL      36
#define PRECEDES_SYMBOL      37
#define PREPARE_SYMBOL      38
#define REMOVE_SYMBOL      39
#define REPAIR_SYMBOL      40
#define RESET_SYMBOL      41
#define RESTORE_SYMBOL      42
#define ROLLBACK_SYMBOL      43
#define SAVEPOINT_SYMBOL      44
#define SECURITY_SYMBOL      45
#define SERVER_SYMBOL      46
#define SIGNED_SYMBOL      47
#define SLAVE_SYMBOL      48
#define SOCKET_SYMBOL      49
#define SONAME_SYMBOL      50
#define START_SYMBOL      51
#define STOP_SYMBOL      52
#define TRUNCATE_SYMBOL      53
#define UNICODE_SYMBOL      54
#define UNINSTALL_SYMBOL      55
#define UPGRADE_SYMBOL      56
#define WRAPPER_SYMBOL      57
#define XA_SYMBOL      58
#define ACTION_SYMBOL      59
#define ADDDATE_SYMBOL      60
#define AFTER_SYMBOL      61
#define AGAINST_SYMBOL      62
#define AGGREGATE_SYMBOL      63
#define ALGORITHM_SYMBOL      64
#define ANALYZE_SYMBOL      65
#define ANY_SYMBOL      66
#define AT_SYMBOL      67
#define AUTHORS_SYMBOL      68
#define AUTO_INCREMENT_SYMBOL      69
#define AUTOEXTEND_SIZE_SYMBOL      70
#define AVG_ROW_LENGTH_SYMBOL      71
#define AVG_SYMBOL      72
#define BINLOG_SYMBOL      73
#define BIT_SYMBOL      74
#define BLOCK_SYMBOL      75
#define BOOL_SYMBOL      76
#define BOOLEAN_SYMBOL      77
#define BTREE_SYMBOL      78
#define CASCADED_SYMBOL      79
#define CATALOG_NAME_SYMBOL      80
#define CHAIN_SYMBOL      81
#define CHANGED_SYMBOL      82
#define CHANNEL_SYMBOL      83
#define CIPHER_SYMBOL      84
#define CLIENT_SYMBOL      85
#define CLASS_ORIGIN_SYMBOL      86
#define COALESCE_SYMBOL      87
#define CODE_SYMBOL      88
#define COLLATION_SYMBOL      89
#define COLUMN_NAME_SYMBOL      90
#define COLUMN_FORMAT_SYMBOL      91
#define COLUMNS_SYMBOL      92
#define COMMITTED_SYMBOL      93
#define COMPACT_SYMBOL      94
#define COMPLETION_SYMBOL      95
#define COMPRESSED_SYMBOL      96
#define COMPRESSION_SYMBOL      97
#define CONCURRENT_SYMBOL      98
#define CONNECTION_SYMBOL      99
#define CONSISTENT_SYMBOL      100
#define CONSTRAINT_CATALOG_SYMBOL      101
#define CONSTRAINT_SCHEMA_SYMBOL      102
#define CONSTRAINT_NAME_SYMBOL      103
#define CONTEXT_SYMBOL      104
#define CONTRIBUTORS_SYMBOL      105
#define CPU_SYMBOL      106
#define CUBE_SYMBOL      107
#define CURRENT_SYMBOL      108
#define CURSOR_NAME_SYMBOL      109
#define DATA_SYMBOL      110
#define DATAFILE_SYMBOL      111
#define DATETIME_SYMBOL      112
#define DATE_SYMBOL      113
#define DAY_SYMBOL      114
#define DEFAULT_AUTH_SYMBOL      115
#define DEFINER_SYMBOL      116
#define DELAY_KEY_WRITE_SYMBOL      117
#define DES_KEY_FILE_SYMBOL      118
#define DIAGNOSTICS_SYMBOL      119
#define DIRECTORY_SYMBOL      120
#define DISABLE_SYMBOL      121
#define DISCARD_SYMBOL      122
#define DISK_SYMBOL      123
#define DUMPFILE_SYMBOL      124
#define DUPLICATE_SYMBOL      125
#define DYNAMIC_SYMBOL      126
#define ENDS_SYMBOL      127
#define ENUM_SYMBOL      128
#define ENGINE_SYMBOL      129
#define ENGINES_SYMBOL      130
#define ERROR_SYMBOL      131
#define ERRORS_SYMBOL      132
#define ESCAPE_SYMBOL      133
#define EVENT_SYMBOL      134
#define EVENTS_SYMBOL      135
#define EVERY_SYMBOL      136
#define EXPANSION_SYMBOL      137
#define EXPORT_SYMBOL      138
#define EXTENDED_SYMBOL      139
#define EXTENT_SIZE_SYMBOL      140
#define FAULTS_SYMBOL      141
#define FAST_SYMBOL      142
#define FOUND_SYMBOL      143
#define ENABLE_SYMBOL      144
#define FULL_SYMBOL      145
#define FILE_SYMBOL      146
#define FILE_BLOCK_SIZE_SYMBOL      147
#define FILTER_SYMBOL      148
#define FIRST_SYMBOL      149
#define FIXED_SYMBOL      150
#define GENERAL_SYMBOL      151
#define GEOMETRY_SYMBOL      152
#define GEOMETRYCOLLECTION_SYMBOL      153
#define GET_FORMAT_SYMBOL      154
#define GRANTS_SYMBOL      155
#define GLOBAL_SYMBOL      156
#define HASH_SYMBOL      157
#define HOSTS_SYMBOL      158
#define HOUR_SYMBOL      159
#define IDENTIFIED_SYMBOL      160
#define IGNORE_SERVER_IDS_SYMBOL      161
#define INVOKER_SYMBOL      162
#define IMPORT_SYMBOL      163
#define INDEXES_SYMBOL      164
#define INITIAL_SIZE_SYMBOL      165
#define INNODB_SYMBOL      166
#define IO_SYMBOL      167
#define IPC_SYMBOL      168
#define ISOLATION_SYMBOL      169
#define ISSUER_SYMBOL      170
#define INSERT_METHOD_SYMBOL      171
#define JSON_SYMBOL      172
#define KEY_BLOCK_SIZE_SYMBOL      173
#define LAST_SYMBOL      174
#define LEAVES_SYMBOL      175
#define LESS_SYMBOL      176
#define LEVEL_SYMBOL      177
#define LINESTRING_SYMBOL      178
#define LIST_SYMBOL      179
#define LOCAL_SYMBOL      180
#define LOCKS_SYMBOL      181
#define LOGFILE_SYMBOL      182
#define LOGS_SYMBOL      183
#define MAX_ROWS_SYMBOL      184
#define MASTER_SYMBOL      185
#define MASTER_HEARTBEAT_PERIOD_SYMBOL      186
#define MASTER_HOST_SYMBOL      187
#define MASTER_PORT_SYMBOL      188
#define MASTER_LOG_FILE_SYMBOL      189
#define MASTER_LOG_POS_SYMBOL      190
#define MASTER_USER_SYMBOL      191
#define MASTER_PASSWORD_SYMBOL      192
#define MASTER_SERVER_ID_SYMBOL      193
#define MASTER_CONNECT_RETRY_SYMBOL      194
#define MASTER_RETRY_COUNT_SYMBOL      195
#define MASTER_DELAY_SYMBOL      196
#define MASTER_SSL_SYMBOL      197
#define MASTER_SSL_CA_SYMBOL      198
#define MASTER_SSL_CAPATH_SYMBOL      199
#define MASTER_SSL_CERT_SYMBOL      200
#define MASTER_SSL_CIPHER_SYMBOL      201
#define MASTER_SSL_CRL_SYMBOL      202
#define MASTER_SSL_CRLPATH_SYMBOL      203
#define MASTER_SSL_KEY_SYMBOL      204
#define MASTER_AUTO_POSITION_SYMBOL      205
#define MAX_CONNECTIONS_PER_HOUR_SYMBOL      206
#define MAX_QUERIES_PER_HOUR_SYMBOL      207
#define MAX_STATEMENT_TIME_SYMBOL      208
#define MAX_SIZE_SYMBOL      209
#define MAX_UPDATES_PER_HOUR_SYMBOL      210
#define MAX_USER_CONNECTIONS_SYMBOL      211
#define MEDIUM_SYMBOL      212
#define MEMORY_SYMBOL      213
#define MERGE_SYMBOL      214
#define MESSAGE_TEXT_SYMBOL      215
#define MICROSECOND_SYMBOL      216
#define MIGRATE_SYMBOL      217
#define MINUTE_SYMBOL      218
#define MIN_ROWS_SYMBOL      219
#define MODIFY_SYMBOL      220
#define MODE_SYMBOL      221
#define MONTH_SYMBOL      222
#define MULTILINESTRING_SYMBOL      223
#define MULTIPOINT_SYMBOL      224
#define MULTIPOLYGON_SYMBOL      225
#define MUTEX_SYMBOL      226
#define MYSQL_ERRNO_SYMBOL      227
#define NAME_SYMBOL      228
#define NAMES_SYMBOL      229
#define NATIONAL_SYMBOL      230
#define NCHAR_SYMBOL      231
#define NDBCLUSTER_SYMBOL      232
#define NEVER_SYMBOL      233
#define NEXT_SYMBOL      234
#define NEW_SYMBOL      235
#define NO_WAIT_SYMBOL      236
#define NODEGROUP_SYMBOL      237
#define NONE_SYMBOL      238
#define NUMBER_SYMBOL      239
#define NVARCHAR_SYMBOL      240
#define OFFSET_SYMBOL      241
#define OLD_PASSWORD_SYMBOL      242
#define ONE_SHOT_SYMBOL      243
#define ONE_SYMBOL      244
#define PACK_KEYS_SYMBOL      245
#define PAGE_SYMBOL      246
#define PARTIAL_SYMBOL      247
#define PARTITIONING_SYMBOL      248
#define PARTITIONS_SYMBOL      249
#define PASSWORD_SYMBOL      250
#define PHASE_SYMBOL      251
#define PLUGIN_DIR_SYMBOL      252
#define PLUGIN_SYMBOL      253
#define PLUGINS_SYMBOL      254
#define POINT_SYMBOL      255
#define POLYGON_SYMBOL      256
#define PRESERVE_SYMBOL      257
#define PREV_SYMBOL      258
#define PRIVILEGES_SYMBOL      259
#define PROCESS_SYMBOL      260
#define PROCESSLIST_SYMBOL      261
#define PROFILE_SYMBOL      262
#define PROFILES_SYMBOL      263
#define PROXY_SYMBOL      264
#define QUARTER_SYMBOL      265
#define QUERY_SYMBOL      266
#define QUICK_SYMBOL      267
#define READ_ONLY_SYMBOL      268
#define REBUILD_SYMBOL      269
#define RECOVER_SYMBOL      270
#define REDO_BUFFER_SIZE_SYMBOL      271
#define REDOFILE_SYMBOL      272
#define REDUNDANT_SYMBOL      273
#define RELAY_SYMBOL      274
#define RELAYLOG_SYMBOL      275
#define RELAY_LOG_FILE_SYMBOL      276
#define RELAY_LOG_POS_SYMBOL      277
#define RELAY_THREAD_SYMBOL      278
#define RELOAD_SYMBOL      279
#define REORGANIZE_SYMBOL      280
#define REPEATABLE_SYMBOL      281
#define REPLICATION_SYMBOL      282
#define REPLICATE_DO_DB_SYMBOL      283
#define REPLICATE_IGNORE_DB_SYMBOL      284
#define REPLICATE_DO_TABLE_SYMBOL      285
#define REPLICATE_IGNORE_TABLE_SYMBOL      286
#define REPLICATE_WILD_DO_TABLE_SYMBOL      287
#define REPLICATE_WILD_IGNORE_TABLE_SYMBOL      288
#define REPLICATE_REWRITE_DB_SYMBOL      289
#define RESUME_SYMBOL      290
#define RETURNED_SQLSTATE_SYMBOL      291
#define RETURNS_SYMBOL      292
#define REVERSE_SYMBOL      293
#define ROLLUP_SYMBOL      294
#define ROUTINE_SYMBOL      295
#define ROWS_SYMBOL      296
#define ROW_COUNT_SYMBOL      297
#define ROW_FORMAT_SYMBOL      298
#define ROW_SYMBOL      299
#define RTREE_SYMBOL      300
#define SCHEDULE_SYMBOL      301
#define SCHEMA_NAME_SYMBOL      302
#define SECOND_SYMBOL      303
#define SERIAL_SYMBOL      304
#define SERIALIZABLE_SYMBOL      305
#define SESSION_SYMBOL      306
#define SIMPLE_SYMBOL      307
#define SHARE_SYMBOL      308
#define SHUTDOWN_SYMBOL      309
#define SLOW_SYMBOL      310
#define SNAPSHOT_SYMBOL      311
#define SOUNDS_SYMBOL      312
#define SOURCE_SYMBOL      313
#define SQL_AFTER_GTIDS_SYMBOL      314
#define SQL_AFTER_MTS_GAPS_SYMBOL      315
#define SQL_BEFORE_GTIDS_SYMBOL      316
#define SQL_CACHE_SYMBOL      317
#define SQL_BUFFER_RESULT_SYMBOL      318
#define SQL_NO_CACHE_SYMBOL      319
#define SQL_THREAD_SYMBOL      320
#define STACKED_SYMBOL      321
#define STARTS_SYMBOL      322
#define STATS_AUTO_RECALC_SYMBOL      323
#define STATS_PERSISTENT_SYMBOL      324
#define STATS_SAMPLE_PAGES_SYMBOL      325
#define STATUS_SYMBOL      326
#define STORAGE_SYMBOL      327
#define STRING_SYMBOL      328
#define SUBCLASS_ORIGIN_SYMBOL      329
#define SUBDATE_SYMBOL      330
#define SUBJECT_SYMBOL      331
#define SUBPARTITION_SYMBOL      332
#define SUBPARTITIONS_SYMBOL      333
#define SUPER_SYMBOL      334
#define SUSPEND_SYMBOL      335
#define SWAPS_SYMBOL      336
#define SWITCHES_SYMBOL      337
#define TABLE_NAME_SYMBOL      338
#define TABLES_SYMBOL      339
#define TABLE_CHECKSUM_SYMBOL      340
#define TABLESPACE_SYMBOL      341
#define TEMPORARY_SYMBOL      342
#define TEMPTABLE_SYMBOL      343
#define TEXT_SYMBOL      344
#define THAN_SYMBOL      345
#define TRANSACTION_SYMBOL      346
#define TRIGGERS_SYMBOL      347
#define TIMESTAMP_SYMBOL      348
#define TIMESTAMP_ADD_SYMBOL      349
#define TIMESTAMP_DIFF_SYMBOL      350
#define TIME_SYMBOL      351
#define TYPES_SYMBOL      352
#define TYPE_SYMBOL      353
#define UDF_RETURNS_SYMBOL      354
#define FUNCTION_SYMBOL      355
#define UNCOMMITTED_SYMBOL      356
#define UNDEFINED_SYMBOL      357
#define UNDO_BUFFER_SIZE_SYMBOL      358
#define UNDOFILE_SYMBOL      359
#define UNKNOWN_SYMBOL      360
#define UNTIL_SYMBOL      361
#define USER_RESOURCES_SYMBOL      362
#define USER_SYMBOL      363
#define USE_FRM_SYMBOL      364
#define VARIABLES_SYMBOL      365
#define VIEW_SYMBOL      366
#define VALUE_SYMBOL      367
#define WARNINGS_SYMBOL      368
#define WAIT_SYMBOL      369
#define WEEK_SYMBOL      370
#define WORK_SYMBOL      371
#define WEIGHT_STRING_SYMBOL      372
#define X509_SYMBOL      373
#define XID_SYMBOL      374
#define XML_SYMBOL      375
#define YEAR_SYMBOL      376
#define ACCESSIBLE_SYMBOL      377
#define ADD_SYMBOL      378
#define ALL_SYMBOL      379
#define ALTER_SYMBOL      380
#define ALTER_TABLE_ITEM_TOKEN      381
#define ANALYSE_SYMBOL      382
#define AND_SYMBOL      383
#define ASC_SYMBOL      384
#define ASENSITIVE_SYMBOL      385
#define ASSIGN_OPERATOR      386
#define AS_SYMBOL      387
#define AT_AT_SIGN_SYMBOL      388
#define AT_SIGN_SYMBOL      389
#define AT_TEXT_SUFFIX      390
#define BACK_TICK      391
#define BACK_TICK_QUOTED_ID      392
#define BEFORE_SYMBOL      393
#define BETWEEN_SYMBOL      394
#define BIGINT_SYMBOL      395
#define BINARY_SYMBOL      396
#define BIN_NUMBER      397
#define BIN_NUM_SYMBOL      398
#define BITWISE_AND_OPERATOR      399
#define BITWISE_NOT_OPERATOR      400
#define BITWISE_OR_OPERATOR      401
#define BITWISE_XOR_OPERATOR      402
#define BIT_AND_SYMBOL      403
#define BIT_OR_SYMBOL      404
#define BIT_XOR_SYMBOL      405
#define BLOB_SYMBOL      406
#define BLOCK_COMMENT      407
#define BOTH_SYMBOL      408
#define BY_SYMBOL      409
#define CALL_SYMBOL      410
#define CASCADE_SYMBOL      411
#define CASE_SYMBOL      412
#define CAST_SYMBOL      413
#define CHANGE_MASTER_OPTIONS_TOKEN      414
#define CHANGE_SYMBOL      415
#define CHARACTER_SYMBOL      416
#define CHAR_SYMBOL      417
#define CHECK_SYMBOL      418
#define CLOSE_CURLY_SYMBOL      419
#define CLOSE_PAR_SYMBOL      420
#define COLLATE_SYMBOL      421
#define COLON_SYMBOL      422
#define COLUMN_ASSIGNMENT_LIST_TOKEN      423
#define COLUMN_INTERNAL_REF_TOKEN      424
#define COLUMN_NAME_TOKEN      425
#define COLUMN_REF_TOKEN      426
#define COLUMN_SYMBOL      427
#define COMMA_SYMBOL      428
#define COMMENT_RULE      429
#define CONCAT_PIPES_SYMBOL      430
#define CONDITION_SYMBOL      431
#define CONSTRAINT_SYMBOL      432
#define CONTINUE_SYMBOL      433
#define CONVERT_SYMBOL      434
#define COUNT_SYMBOL      435
#define CREATE_ITEM_TOKEN      436
#define CREATE_SYMBOL      437
#define CROSS_SYMBOL      438
#define CURDATE_SYMBOL      439
#define CURRENT_TIMESTAMP_SYMBOL      440
#define CURRENT_USER_SYMBOL      441
#define CURSOR_SYMBOL      442
#define CURTIME_SYMBOL      443
#define DASHDASH_COMMENT      444
#define DATABASES_SYMBOL      445
#define DATABASE_SYMBOL      446
#define DATA_TYPE_TOKEN      447
#define DATE_ADD_INTERVAL_SYMBOL      448
#define DATE_ADD_SYMBOL      449
#define DATE_SUB_INTERVAL_SYMBOL      450
#define DATE_SUB_SYMBOL      451
#define DAYOFMONTH_SYMBOL      452
#define DAY_HOUR_SYMBOL      453
#define DAY_MICROSECOND_SYMBOL      454
#define DAY_MINUTE_SYMBOL      455
#define DAY_SECOND_SYMBOL      456
#define DECIMAL_NUMBER      457
#define DECIMAL_NUM_SYMBOL      458
#define DECIMAL_SYMBOL      459
#define DECLARE_SYMBOL      460
#define DEC_SYMBOL      461
#define DEFAULT_SYMBOL      462
#define DELAYED_SYMBOL      463
#define DELETE_SYMBOL      464
#define DESCRIBE_SYMBOL      465
#define DESC_SYMBOL      466
#define DETERMINISTIC_SYMBOL      467
#define DIGIT      468
#define DIGITS      469
#define DISTINCTROW_SYMBOL      470
#define DISTINCT_SYMBOL      471
#define DIV_OPERATOR      472
#define DIV_SYMBOL      473
#define DOT_SYMBOL      474
#define DOUBLE_DASH      475
#define DOUBLE_QUOTE      476
#define DOUBLE_QUOTED_TEXT      477
#define DOUBLE_SYMBOL      478
#define DROP_SYMBOL      479
#define DUAL_SYMBOL      480
#define EACH_SYMBOL      481
#define ELSEIF_SYMBOL      482
#define ELSE_SYMBOL      483
#define ENCLOSED_SYMBOL      484
#define END_OF_INPUT_SYMBOL      485
#define ENGINE_REF_TOKEN      486
#define EQUAL_OPERATOR      487
#define ESCAPED_SYMBOL      488
#define ESCAPE_OPERATOR      489
#define EVENT_NAME_TOKEN      490
#define EVENT_REF_TOKEN      491
#define EXCHANGE_SYMBOL      492
#define EXISTS_SYMBOL      493
#define EXIT_SYMBOL      494
#define EXPIRE_SYMBOL      495
#define EXPLAIN_SYMBOL      496
#define EXPRESSION_TOKEN      497
#define EXTRACT_SYMBOL      498
#define FALSE_SYMBOL      499
#define FETCH_SYMBOL      500
#define FIELDS_SYMBOL      501
#define FLOAT4_SYMBOL      502
#define FLOAT8_SYMBOL      503
#define FLOAT_NUMBER      504
#define FLOAT_SYMBOL      505
#define FORCE_SYMBOL      506
#define FOREIGN_SYMBOL      507
#define FOR_SYMBOL      508
#define FRAC_SECOND_SYMBOL      509
#define FROM_SYMBOL      510
#define FULLTEXT_SYMBOL      511
#define FUNCTION_CALL_TOKEN      512
#define FUNCTION_NAME_TOKEN      513
#define FUNCTION_REF_TOKEN      514
#define GENERATED_SYMBOL      515
#define GET_SYMBOL      516
#define GRANT_SYMBOL      517
#define GREATER_OR_EQUAL_OPERATOR      518
#define GREATER_THAN_OPERATOR      519
#define GROUP_CONCAT_SYMBOL      520
#define GROUP_SYMBOL      521
#define HAVING_SYMBOL      522
#define HEXDIGIT      523
#define HEX_NUMBER      524
#define HIGH_PRIORITY_SYMBOL      525
#define HOUR_MICROSECOND_SYMBOL      526
#define HOUR_MINUTE_SYMBOL      527
#define HOUR_SECOND_SYMBOL      528
#define IDENTIFIER      529
#define IF_SYMBOL      530
#define IGNORE_SYMBOL      531
#define INDEX_HINT_LIST_TOKEN      532
#define INDEX_NAME_TOKEN      533
#define INDEX_REF_TOKEN      534
#define INDEX_SYMBOL      535
#define INFILE_SYMBOL      536
#define INNER_SYMBOL      537
#define INOUT_SYMBOL      538
#define INSENSITIVE_SYMBOL      539
#define INSERT_SYMBOL      540
#define INT1_SYMBOL      541
#define INT2_SYMBOL      542
#define INT3_SYMBOL      543
#define INT4_SYMBOL      544
#define INT8_SYMBOL      545
#define INTEGER_SYMBOL      546
#define INTERVAL_SYMBOL      547
#define INTO_SYMBOL      548
#define INT_NUMBER      549
#define INT_SYMBOL      550
#define INVALID_INPUT      551
#define IN_SYMBOL      552
#define IO_AFTER_GTIDS_SYMBOL      553
#define IO_BEFORE_GTIDS_SYMBOL      554
#define IO_THREAD_SYMBOL      555
#define IS_SYMBOL      556
#define ITERATE_SYMBOL      557
#define JOIN_EXPR_TOKEN      558
#define JOIN_SYMBOL      559
#define JSON_SEPARATOR_SYMBOL      560
#define KEYS_SYMBOL      561
#define KEY_CACHE_LIST_TOKEN      562
#define KEY_CACHE_PARTITION_TOKEN      563
#define KEY_SYMBOL      564
#define KILL_SYMBOL      565
#define LABEL_TOKEN      566
#define LEADING_SYMBOL      567
#define LEAVE_SYMBOL      568
#define LEFT_SYMBOL      569
#define LESS_OR_EQUAL_OPERATOR      570
#define LESS_THAN_OPERATOR      571
#define LETTER_WHEN_UNQUOTED      572
#define LETTER_WHEN_UNQUOTED_NO_DIGIT      573
#define LIKE_SYMBOL      574
#define LIMIT_SYMBOL      575
#define LINEAR_SYMBOL      576
#define LINEBREAK      577
#define LINES_SYMBOL      578
#define LOAD_SYMBOL      579
#define LOCALTIMESTAMP_SYMBOL      580
#define LOCALTIME_SYMBOL      581
#define LOCATOR_SYMBOL      582
#define LOCK_SYMBOL      583
#define LOGFILE_GROUP_NAME_TOKEN      584
#define LOGFILE_GROUP_OPTIONS_TOKEN      585
#define LOGFILE_GROUP_REF_TOKEN      586
#define LOGICAL_AND_OPERATOR      587
#define LOGICAL_NOT_OPERATOR      588
#define LOGICAL_OR_OPERATOR      589
#define LONGBLOB_SYMBOL      590
#define LONGTEXT_SYMBOL      591
#define LONG_NUMBER      592
#define LONG_NUM_SYMBOL      593
#define LONG_SYMBOL      594
#define LOOP_SYMBOL      595
#define LOW_PRIORITY_SYMBOL      596
#define MASTER_BIND_SYMBOL      597
#define MASTER_SSL_VERIFY_SERVER_CERT_SYMBOL      598
#define MATCH_SYMBOL      599
#define MAXVALUE_SYMBOL      600
#define MAX_SYMBOL      601
#define MEDIUMBLOB_SYMBOL      602
#define MEDIUMINT_SYMBOL      603
#define MEDIUMTEXT_SYMBOL      604
#define MIDDLEINT_SYMBOL      605
#define MID_SYMBOL      606
#define MINUS_OPERATOR      607
#define MINUTE_MICROSECOND_SYMBOL      608
#define MINUTE_SECOND_SYMBOL      609
#define MIN_SYMBOL      610
#define ML_COMMENT_END      611
#define ML_COMMENT_HEAD      612
#define MODIFIES_SYMBOL      613
#define MOD_OPERATOR      614
#define MOD_SYMBOL      615
#define MULTILINE_COMMENT      616
#define MULT_OPERATOR      617
#define NATURAL_SYMBOL      618
#define NCHAR_STRING_SYMBOL      619
#define NCHAR_TEXT      620
#define NDB_SYMBOL      621
#define NEG_SYMBOL      622
#define NONBLOCKING_SYMBOL      623
#define NOT2_SYMBOL      624
#define NOT_EQUAL2_OPERATOR      625
#define NOT_EQUAL_OPERATOR      626
#define NOT_SYMBOL      627
#define NOW_SYMBOL      628
#define NO_WRITE_TO_BINLOG_SYMBOL      629
#define NULL2_SYMBOL      630
#define NULL_SAFE_EQUAL_OPERATOR      631
#define NULL_SYMBOL      632
#define NUMBER      633
#define NUMERIC_SYMBOL      634
#define OFFLINE_SYMBOL      635
#define ONLINE_SYMBOL      636
#define ONLY_SYMBOL      637
#define ON_SYMBOL      638
#define OPEN_CURLY_SYMBOL      639
#define OPEN_PAR_SYMBOL      640
#define OPTIMIZER_COSTS_SYMBOL      641
#define OPTIMIZE_SYMBOL      642
#define OPTIONALLY_SYMBOL      643
#define OPTION_SYMBOL      644
#define ORDER_SYMBOL      645
#define OR_SYMBOL      646
#define OUTER_SYMBOL      647
#define OUTFILE_SYMBOL      648
#define OUT_SYMBOL      649
#define PARAM_MARKER      650
#define PAR_EXPRESSION_TOKEN      651
#define PLUS_OPERATOR      652
#define POSITION_SYMBOL      653
#define POUND_COMMENT      654
#define PRECISION_SYMBOL      655
#define PRIMARY_SYMBOL      656
#define PRIVILEGE_TARGET_TOKEN      657
#define PROCEDURE_NAME_TOKEN      658
#define PROCEDURE_REF_TOKEN      659
#define PROCEDURE_SYMBOL      660
#define PURGE_SYMBOL      661
#define RANGE_SYMBOL      662
#define READS_SYMBOL      663
#define READ_SYMBOL      664
#define READ_WRITE_SYMBOL      665
#define REAL_SYMBOL      666
#define REFERENCES_SYMBOL      667
#define REGEXP_SYMBOL      668
#define RELEASE_SYMBOL      669
#define RENAME_SYMBOL      670
#define REPEAT_SYMBOL      671
#define REPLACE_SYMBOL      672
#define REQUIRE_SYMBOL      673
#define RESIGNAL_SYMBOL      674
#define RESTRICT_SYMBOL      675
#define RETURN_SYMBOL      676
#define REVOKE_SYMBOL      677
#define RIGHT_SYMBOL      678
#define RLIKE_SYMBOL      679
#define ROUTINE_ALTER_OPTIONS      680
#define ROUTINE_CREATE_OPTIONS      681
#define RUNTIME_FUNCTION_TOKEN      682
#define SCHEMAS_SYMBOL      683
#define SCHEMA_NAME_TOKEN      684
#define SCHEMA_REF_TOKEN      685
#define SCHEMA_SYMBOL      686
#define SECOND_MICROSECOND_SYMBOL      687
#define SELECT_EXPR_TOKEN      688
#define SELECT_SYMBOL      689
#define SEMICOLON_SYMBOL      690
#define SENSITIVE_SYMBOL      691
#define SEPARATOR_SYMBOL      692
#define SERVER_NAME_TOKEN      693
#define SERVER_OPTIONS_SYMBOL      694
#define SERVER_REF_TOKEN      695
#define SESSION_USER_SYMBOL      696
#define SET_SYMBOL      697
#define SET_VAR_SYMBOL      698
#define SHIFT_LEFT_OPERATOR      699
#define SHIFT_RIGHT_OPERATOR      700
#define SHOW_SYMBOL      701
#define SIGNAL_SYMBOL      702
#define SIMPLE_IDENTIFIER      703
#define SINGLE_QUOTE      704
#define SINGLE_QUOTED_TEXT      705
#define SLAVE_THREAD_OPTIONS_TOKEN      706
#define SMALLINT_SYMBOL      707
#define SPATIAL_SYMBOL      708
#define SPECIFIC_SYMBOL      709
#define SQLEXCEPTION_SYMBOL      710
#define SQLSTATE_SYMBOL      711
#define SQLWARNING_SYMBOL      712
#define SQL_BIG_RESULT_SYMBOL      713
#define SQL_CALC_FOUND_ROWS_SYMBOL      714
#define SQL_SMALL_RESULT_SYMBOL      715
#define SQL_SYMBOL      716
#define SQL_TSI_DAY_SYMBOL      717
#define SQL_TSI_FRAC_SECOND_SYMBOL      718
#define SQL_TSI_HOUR_SYMBOL      719
#define SQL_TSI_MINUTE_SYMBOL      720
#define SQL_TSI_MONTH_SYMBOL      721
#define SQL_TSI_QUARTER_SYMBOL      722
#define SQL_TSI_SECOND_SYMBOL      723
#define SQL_TSI_WEEK_SYMBOL      724
#define SQL_TSI_YEAR_SYMBOL      725
#define SSL_SYMBOL      726
#define STARTING_SYMBOL      727
#define STDDEV_POP_SYMBOL      728
#define STDDEV_SAMP_SYMBOL      729
#define STDDEV_SYMBOL      730
#define STD_SYMBOL      731
#define STORED_SYMBOL      732
#define STRAIGHT_JOIN_SYMBOL      733
#define STRING_NO_LINEBREAK_TOKEN      734
#define STRING_TOKEN      735
#define SUBQUERY_TOKEN      736
#define SUBSTRING_SYMBOL      737
#define SUBSTR_SYMBOL      738
#define SUM_SYMBOL      739
#define SYSDATE_SYMBOL      740
#define SYSTEM_USER_SYMBOL      741
#define TABLESPACE_NAME_TOKEN      742
#define TABLESPACE_OPTIONS_TOKEN      743
#define TABLESPACE_REF_TOKEN      744
#define TABLE_NAME_TOKEN      745
#define TABLE_REF_PRIORITY_SYMBOL      746
#define TABLE_REF_TOKEN      747
#define TABLE_SYMBOL      748
#define TERMINATED_SYMBOL      749
#define THEN_SYMBOL      750
#define TINYBLOB_SYMBOL      751
#define TINYINT_SYMBOL      752
#define TINYTEXT_SYMBOL      753
#define TO_SYMBOL      754
#define TRAILING_SYMBOL      755
#define TRIGGER_NAME_TOKEN      756
#define TRIGGER_REF_TOKEN      757
#define TRIGGER_SYMBOL      758
#define TRIM_SYMBOL      759
#define TRUE_SYMBOL      760
#define UDF_CALL_TOKEN      761
#define UDF_NAME_TOKEN      762
#define ULONGLONG_NUMBER      763
#define UNDERLINE_SYMBOL      764
#define UNDERSCORE_CHARSET      765
#define UNDO_SYMBOL      766
#define UNION_SYMBOL      767
#define UNIQUE_SYMBOL      768
#define UNLOCK_SYMBOL      769
#define UNSIGNED_SYMBOL      770
#define UPDATE_SYMBOL      771
#define USAGE_SYMBOL      772
#define USE_SYMBOL      773
#define USING_SYMBOL      774
#define UTC_DATE_SYMBOL      775
#define UTC_TIMESTAMP_SYMBOL      776
#define UTC_TIME_SYMBOL      777
#define VALIDATION_SYMBOL      778
#define VALUES_SYMBOL      779
#define VARBINARY_SYMBOL      780
#define VARCHARACTER_SYMBOL      781
#define VARCHAR_SYMBOL      782
#define VARIANCE_SYMBOL      783
#define VARYING_SYMBOL      784
#define VAR_POP_SYMBOL      785
#define VAR_SAMP_SYMBOL      786
#define VERSION_COMMENT      787
#define VERSION_COMMENT_END      788
#define VERSION_COMMENT_INTRODUCER      789
#define VERSION_COMMENT_START_TOKEN      790
#define VERSION_COMMENT_TAIL      791
#define VIEW_NAME_TOKEN      792
#define VIEW_REF_TOKEN      793
#define VIRTUAL_SYMBOL      794
#define WHEN_SYMBOL      795
#define WHERE_SYMBOL      796
#define WHILE_SYMBOL      797
#define WHITESPACE      798
#define WITHOUT_SYMBOL      799
#define WITH_CUBE_SYMBOL      800
#define WITH_ROLLUP_SYMBOL      801
#define WITH_SYMBOL      802
#define WRITE_SYMBOL      803
#define XA_ID_TOKEN      804
#define XOR_SYMBOL      805
#define YEAR_MONTH_SYMBOL      806
#define ZEROFILL_SYMBOL      807
#ifdef	EOF
#undef	EOF
#define	EOF	ANTLR3_TOKEN_EOF
#endif

#ifndef TOKENSOURCE
#define TOKENSOURCE(lxr) lxr->pLexer->rec->state->tokSource
#endif

/* End of token definitions for MySQLSimpleParser
 * =============================================================================
 */
/** } */

#ifdef __cplusplus
}
#endif

#endif

/* END - Note:Keep extra line feed to satisfy UNIX systems */
